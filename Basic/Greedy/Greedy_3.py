# [문제3] 곱하기 혹은 더하기 ----------------------------------------------
# 각 자리가 숫자(0-9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 'x' 혹은 '+' 연산자를 넣어 결과적으로 "만들어질 수 있는 가장 큰 수를 구하는 프로그램"을 작성하시오.
# 단, +보다 x를 먼저 계산하는 일반적인 방식과 달리, "모든 연산은 왼쪽에서부터 순서대로" 이루어짐.
# 예를 들어 02984라는 문자열로 만들 수 있는 가장 큰 수는 0+2*9*8*4 = 576임.
#또한 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어짐.

# 아이디어: 대부분의 경우 '+'보다 'x'가 더 값이 커짐.
#단, 두 수 중 하나라도 0 혹은 1인 경우, 곱하기보다 더하기가 더 효율적임.
# 따라서 

# ***소스코드 1 ***
S = input("숫자를 입력하세요: ")
result = 0

for i in S:
  #연산을 위해 정수형 변환
  i = int(i)
  #곱하기보다 더하기가 더 나은 경우 확인
  if i <=1 or result <= 1:
    result = result + i
  else:
    result = result * i

print(f"가장 큰 수는 {result}입니다.")

# ******

# 시간복잡도: 입력되는 숫자의 길이만큼.


