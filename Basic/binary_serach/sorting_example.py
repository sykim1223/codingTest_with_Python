# [문제1] 두 배열의 원소 교체
# 두 개의 배열 A와 B가 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다.
# 최대 K번위 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 바꾸는 것이다.
# 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것이다.
# N,K 그리고 배열 A, B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의모든 원소의 합의 최댓값을 출력하는 프로그램을 만드시오.

# 입력조건) 첫번째 줄에 N,K가 공백을 기준으로 구분되어 입력(1 <= N <=100,000, 0 <= K <= N)
#         두번째 줄에 배열 A의 원소들이 공백을 기준으로 구분되어 입력. 모든 원소는 10,000,000보다 작은 자연수
#         세번째 줄에 배열 B의 원소들이 공백을 기준으로 구분되어 입력. 모든 원소는 10,000,000보다 작은 자연수
# 출력조건) 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력

# 테스트벡터) 
# 5 3
# 1 2 5 4 3
# 5 5 6 6 5
# 답) 26

# ****** 소스코드 ******
n, k = map(int, input("n과 k를 입력하세요: ").split())
a = list(map(int, input("a배열의 원소를 입력하세요: ").split()))
b = list(map(int, input("b배열의 원소를 입력하세요: ").split()))

a.sort()
b.sort(reverse=True)

for i in range(k):
  if a[i]<b[i]:
    a[i], b[i] = b[i], a[i]
  else:
    break

print(sum(a))
# ****** ******

#핵심 아이디어: "매번 배열A에서 가장 작은 원소를 골라, 배열 B에서 가장 큰 원소와 교체"
# 두 배열의 원소가 최대 100,000개 까지 입력되므로, 최악의 경우 O(NlogN)을 보장하는 정렬 알고리즘을 이용해야 함
