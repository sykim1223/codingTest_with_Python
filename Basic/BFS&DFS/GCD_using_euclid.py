
# 최대공약수 계산(유클리드 호제법) 예제 #
# 두 자연수 A,B에대해 (A>B) A를 B로 나눈 나머지를 R이라고 하자.
# 이때, A와 B의 최대공약수는 B와 R의 최대공약수와 같다.
# ****** 재귀함수로 구현한 소스코드 ******
# def gcd(a, b):
#   if a%b == 0:
#     return b
#   else:
#     return gcd(b, a%b)

# a, b =192, 162
# print(a, '\b와', b, '\b의 최대공약수는', gcd(a, b), '입니다.')
# ****** ******
# 재귀 함수가 반복문보다 유리한 경우도, 불리한 경우도 있음.
# 컴퓨터가 함수를 연속적으로 호출하면 컴퓨터 메모리 내부의 스택프레임에 쌓임.
#     -> 스택을 사용해야 할 때, 구현상 "스택라이브러리 대신 재귀 함수를 이용"하는 경우가 많음